# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

platform :ios do
  private_lane :update_version do
    app_store_version = get_app_store_version_number(bunder_id: 'FastlaneDemo')
    plist_version = get_version_number_from_plist(xcodeproj: './ios/FastlaneDemo.xcodeproj')
    if Gem::Version.new(plist_version.to_f) == Gem::Version.new(app_store_version.to_f)
      UI.message "bumping minor"
      increment_version_number_in_plist(xcodeproj: './ios/FastlaneDemo.xcodeproj', bump_type: 'minor')
    else
      UI.message "bumping patch"
      increment_version_number_in_plist(xcodeproj: './ios/FastlaneDemo.xcodeproj', bump_type: 'patch')
    end
  end

  private_lane :staging_build do
    increment_build_number(xcodeproj: './ios/FastlaneDemo.xcodeproj', target: 'FastlaneDemo')
    gym(scheme: 'FastlaneDemo', workspace: './ios/FastlaneDemo.xcworkspace')
  end

  lane :beta do
    staging_build
    upload_to_testflight(username: 'haquangtrong.ton@gmail.com', app_identifier: 'com.ton.FastlaneDemo')
    commit_version_bump(message: 'bump build')
    push_to_git_remote
  end
end
